{"data":{"site":{"siteMetadata":{"title":"Violentmonkey","subtitle":"An open source userscript manager.","disqusShortname":"","url":"https://violentmonkey.github.io/"}},"markdownRemark":{"id":"9b08f8dc-4f39-5d7a-9d42-da7063d8a80b","html":"<p>Since Violentmonkey v2.10.0, a new type of metadata named <code class=\"language-text\">@inject-into</code> is introduced.</p>\n<p>As we know, there are two types of context for a script to execute in:</p>\n<ul>\n<li>\n<p>context of a web page</p>\n<p>The context in which all scripts of a web page execute. We will call it \"<em>page context</em>\".</p>\n</li>\n<li>\n<p>context of content scripts</p>\n<p>The context in which <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\">content scripts</a> execute. We will call it \"<em>content context</em>\" later.</p>\n<p>The <em>content context</em> is an isolated world, scripts in this context have no access to JavaScript objects from <em>page context</em>. But they can communicate with DOM APIs such as <code class=\"language-text\">addEventListener</code>.</p>\n</li>\n</ul>\n<h2 id=\"injection-mode\"><a href=\"#injection-mode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Injection Mode</h2>\n<p>In earlier versions of Violentmonkey, all scripts will be injected into the <em>page context</em>.</p>\n<p>This works well at most time in Chrome. However, Firefox works differently. All scripts will be blocked in websites with CSP rules blocking inline scripts, like <a href=\"https://github.com\">GitHub</a>.</p>","fields":{"tagSlugs":["/tags/inject/"]},"frontmatter":{"title":"Inject scripts into different contexts","tags":["inject"],"date":"2018-11-23T23:35:11.000Z","description":""}}},"pageContext":{"slug":"/2018/11/23/inject-into-context/"}}