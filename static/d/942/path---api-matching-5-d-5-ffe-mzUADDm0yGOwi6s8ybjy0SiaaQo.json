{"data":{"site":{"siteMetadata":{"title":"Violentmonkey","subtitle":"An open source userscript manager","copyright":"Â© All rights reserved.","menu":[{"label":"Blog","path":"/posts/"},{"label":"Get it","path":"/get-it/"},{"label":"API","path":"/api/"},{"label":"About","path":"/about/"}],"author":{"name":"Gerald L.","email":"i@gerald.top","telegram":"gera2ld","twitter":"gera2ld","github":"gera2ld","rss":""}}},"markdownRemark":{"id":"83d93feb-77ad-570f-a618-7de677626d3b","html":"<p>There are four types of rules: <code class=\"language-text\">@match</code> / <code class=\"language-text\">@exclude-match</code> / <code class=\"language-text\">@include</code> / <code class=\"language-text\">@exclude</code> in Violentmonkey.</p>\n<h2>@match / @exclude-match</h2>\n<p>It is recommended to use <code class=\"language-text\">@match</code> / <code class=\"language-text\">@exclude-match</code> rather than <code class=\"language-text\">@include</code> / <code class=\"language-text\">@exclude</code> because the <em>match</em> rules are safer and more strict.</p>\n<p><code class=\"language-text\">@match</code> defines a URL matching rule. <code class=\"language-text\">@exclude-match</code> defines a match rule but used to exclude the matched URLs, similar to <code class=\"language-text\">@exclude</code>.</p>\n<p>For more details, see the document on <a href=\"https://developer.chrome.com/extensions/match_patterns\">Match Patterns</a> for Chrome extensions.</p>\n<p>Note that match patterns only work on scheme, host and path, i.e. match patterns always ignore query string and hash.</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// @match *://*/*</span>\n<span class=\"token comment\">// @exclude-match *://*.tk/*</span></code></pre></div>\n<h2>@include / @exclude</h2>\n<p>Each <code class=\"language-text\">@include</code> and <code class=\"language-text\">@exclude</code> rule can be the following:</p>\n<ul>\n<li>\n<p>A string with one or more wildcards (<code class=\"language-text\">*</code>), each of which matches any characters.</p>\n<p>e.g. <code class=\"language-text\">https://www.google.com/*</code> matches the following:</p>\n<ul>\n<li><code class=\"language-text\">https://www.google.com/</code></li>\n<li><code class=\"language-text\">https://www.google.com/any/subview</code></li>\n</ul>\n<p>but not the following:</p>\n<ul>\n<li><code class=\"language-text\">http://www.google.com/</code></li>\n<li><code class=\"language-text\">https://www.google.com.hk/</code></li>\n</ul>\n</li>\n<li>\n<p>A string without any wildcard. This way the rule matches the entire URL.</p>\n<p>e.g. <code class=\"language-text\">https://www.google.com/</code> matches only <code class=\"language-text\">https://www.google.com/</code> but not <code class=\"language-text\">https://www.google.com/any/subview</code>.</p>\n</li>\n<li>\n<p>A string starting and ending with a slash (<code class=\"language-text\">/</code>). This way the rule will be regarded as a regular expression.</p>\n<p>e.g. <code class=\"language-text\">/\\.google\\.com[\\.\\/]/</code> matches the following:</p>\n<ul>\n<li><code class=\"language-text\">https://www.google.com/</code>,</li>\n<li><code class=\"language-text\">https://www.google.com/any/subview</code></li>\n<li><code class=\"language-text\">http://www.google.com/</code></li>\n<li><code class=\"language-text\">https://www.google.com.hk/</code></li>\n</ul>\n</li>\n</ul>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// @include *</span>\n<span class=\"token comment\">// @include https://www.google.com/*</span>\n<span class=\"token comment\">// @include /\\.com\\.hk\\//</span>\n<span class=\"token comment\">// @exclude https://www.google.com/exact/url</span></code></pre></div>\n<h2>How does a script match?</h2>\n<p>In short, a script will execute if it matches any <code class=\"language-text\">@match</code> or <code class=\"language-text\">@include</code> rule and does not match any <code class=\"language-text\">@exclude-match</code> or <code class=\"language-text\">@exclude</code> rule.</p>\n<p>Here is the long version:</p>\n<ul>\n<li>If any <code class=\"language-text\">@exclude-match</code> or <code class=\"language-text\">@exclude</code> rule matches, the script does not match.</li>\n<li>Otherwise if any <code class=\"language-text\">@match</code> rule is defined, the script matches only if some of the <code class=\"language-text\">@match</code> rules match.</li>\n<li>If no <code class=\"language-text\">@match</code> rule is defined, we fallback to <code class=\"language-text\">@include</code> rules and the script matches only if some of the <code class=\"language-text\">@include</code> rules match.</li>\n<li>If neither <code class=\"language-text\">@match</code> nor <code class=\"language-text\">@include</code> rule is defined, the script is assumed to match.</li>\n</ul>\n<p><img src=\"/match-5353fff61b7784074245599dfc3ebf63.png\" alt=\"match.png\"></p>","frontmatter":{"title":"Matching","date":"2017-12-02T22:32:50.000Z","description":""}}},"pageContext":{"slug":"/api/matching"}}